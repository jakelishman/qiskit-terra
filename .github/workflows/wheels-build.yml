name: Build release artifacts
on:
  workflow_call:
    inputs:
      default-action:
        description: >-
          The default action for each artifact.
          Choose from 'build' (default) or 'skip'.
        type: string
        default: "build"
        required: false

      sdist:
        description: >-
          The action to take for the sdist.
          Choose from 'default', 'build' or 'skip'.
        type: string
        default: "default"
        required: false

      wheels-tier-1:
        description: >-
          The action to take for Tier 1 wheels.
          Choose from 'default', 'build' or 'skip'.
          This builds multiple artifacts, which all match 'wheels-tier-1-*'.
        type: string
        default: "default"
        required: false

      wheels-32bit: 
        description: >-
          The action to take for Tier 1 wheels.
          Choose from 'default', 'build' or 'skip'.
          This builds multiple artifacts, which all match 'wheels-32bit-*'.
        type: string
        default: "default"
        required: false

      wheels-linux-s390x: 
        description: >-
          The action to take for Linux s390x wheels.
          Choose from 'default', 'build' or 'skip'.
        type: string
        default: "default"
        required: false

      wheels-linux-ppc64le: 
        description: >-
          The action to take for Linux ppc64le wheels.
          Choose from 'default', 'build' or 'skip'.
        type: string
        default: "default"
        required: false

      wheels-linux-aarch64: 
        description: >-
          The action to take for Linux AArch64 wheels.
          Choose from 'default', 'build' or 'skip'.
        type: string
        default: "default"
        required: false

      artifact-prefix:
        description: "A prefix to give all artifacts uploaded with 'actions/upload-artifact'."
        type: string
        default: ""
        required: false

      python-version:
        description: "The Python version to use to host the build runner."
        type: string
        default: "3.10"
        required: false
      

jobs:
  wheels-tier-1:
    name: "Tier 1 wheels"
    if: (inputs.wheels-tier-1 == 'default' && inputs.default-action || inputs.wheels-tier-1) == 'build'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # Used for the x86_64 builds.
          - macos-12
          # Used for the ARM builds.
          - macos-14
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          architecture: ${{ matrix.os == 'macos-14' && 'arm64' || 'x64' }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_BEFORE_BUILD: bash ./tools/build_pgo.sh /tmp/pgo-data/merged.profdata
          CIBW_BEFORE_BUILD_WINDOWS: bash ./tools/build_pgo.sh /tmp/pgo-data/merged.profdata && cp /tmp/pgo-data/merged.profdata ~/.
          CIBW_ENVIRONMENT: RUSTUP_TOOLCHAIN="stable" RUSTFLAGS="-Cprofile-use=/tmp/pgo-data/merged.profdata -Cllvm-args=-pgo-warn-missing-function"
          CIBW_ENVIRONMENT_LINUX: RUSTUP_TOOLCHAIN="stable" RUSTFLAGS="-Cprofile-use=/tmp/pgo-data/merged.profdata -Cllvm-args=-pgo-warn-missing-function" PATH="$PATH:$HOME/.cargo/bin" CARGO_NET_GIT_FETCH_WITH_CLI="true"
          CIBW_ENVIRONMENT_WINDOWS: RUSTUP_TOOLCHAIN="stable" RUSTFLAGS="-Cprofile-use=c:\\Users\\runneradmin\\merged.profdata -Cllvm-args=-pgo-warn-missing-function"
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-tier-1-${{ matrix.os }}

  wheels-32bit:
    name: "32bit wheels"
    if: (inputs.wheels-32bit == 'default' && inputs.default-action || inputs.wheels-32bit) == 'build'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_SKIP: 'pp* cp36-* cp37-* cp38-* *musllinux* *amd64 *x86_64'
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-32bit-${{ matrix.os }}

  wheels-linux-s390x:
    name: "Linux s390x wheel"
    if: (inputs.wheels-linux-s390x == 'default' && inputs.default-action || inputs.wheels-linux-s390x) == 'build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ inputs.python-version }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_ARCHS_LINUX: s390x
          CIBW_TEST_SKIP: "cp*"
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-s390x
          path: ./wheelhouse/*.whl

  wheels-linux-ppc64le:
    name: "Linux pcc64le wheel"
    if: (inputs.wheels-linux-ppc64le == 'default' && inputs.default-action || inputs.wheels-linux-ppc64le) == 'build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: ${{ inputs.python-version }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_ARCHS_LINUX: ppc64le
          CIBW_TEST_SKIP: "cp*"
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-ppc64le
          path: ./wheelhouse/*.whl

  wheels-linux-aarch64:
    name: "Linux AArch64 wheel"
    if: (inputs.wheels-linux-aarch64 == 'default' && inputs.default-action || inputs.wheels-linux-aarch64) == 'build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_ARCHS_LINUX: aarch64
          CIBW_TEST_COMMAND: cp -r {project}/test . && QISKIT_PARALLEL=FALSE stestr --test-path test/python run --abbreviate -n test.python.compiler.test_transpiler
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-aarch64
          path: ./wheelhouse/*.whl

  sdist:
    name: "sdist"
    if: (inputs.sdist == 'default' && inputs.default-action || inputs.sdist) == 'build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Build sdist
        run: |
          set -e
          python -m pip install -U build
          python -m build --sdist .
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz
